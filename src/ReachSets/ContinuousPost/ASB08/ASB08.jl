export ASB08

# load packages
using LazySets.Approximations
using Reachability.ReachSets: Œ¶‚ÇÅ
using IntervalArithmetic
using LazySets: Interval, translate
using TaylorSeries
using TaylorSeries: gradient, jacobian, hessian, derivative
const ‚àÇ = derivative

struct ASB08 <: ContinuousPost
    options::TwoLayerOptions

    function ASB08(ùëÇ::Options)
        ùëÇnew = validate_and_wrap_options(ùëÇ, options_ASB08())
        return new(ùëÇnew)
    end
end

# convenience constructor from pairs of symbols
ASB08(ùëÇ::Pair{Symbol,<:Any}...) = ASB08(Options(Dict{Symbol,Any}(ùëÇ)))

# default options (they are added in the function validate_and_wrap_options)
ASB08() = ASB08(Options())

include("init.jl")
include("post.jl")
include("reach.jl")
